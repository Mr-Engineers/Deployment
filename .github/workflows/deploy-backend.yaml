name: Deploy new application version

on:
  workflow_dispatch:

jobs:
    deploy:
        runs-on: ubuntu-latest

        env:
            DEPLOYMENT_USER: deploy
            DEPLOYMENT_SERVER: 13.60.70.51
            AWS_SECURITY_GROUP: sg-0bc819a6b68081e38

        steps:
                    
            - name: Get Github action IP
              id: ip
              uses: candidob/get-runner-ip@v1.0.0

            - name: Add Github Actions IP to the security group
              run: |
                    aws ec2 authorize-security-group-ingress   \
                        --group-id ${{ env.AWS_SECURITY_GROUP }} \
                        --protocol tcp                           \
                        --port 22                                \
                        --cidr ${{ steps.ip.outputs.ipv4 }}/32
              env:
                AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
                AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}

            # - name: Copy project files to server
            #   run: |
            #     ssh -o StrictHostKeyChecking=no ${{ env.DEPLOYMENT_USER }}@${{ env.DEPLOYMENT_SERVER }} "mkdir -p ~/app"
            #     rsync -avz --exclude '.git' ./ ${{ env.DEPLOYMENT_USER }}@${{ env.DEPLOYMENT_SERVER }}:~/app

            - name: Stop old container
              uses: appleboy/ssh-action@v0.1.8
              with:
                host: ${{ env.DEPLOYMENT_SERVER }}
                username: ${{ env.DEPLOYMENT_USER }}
                key: ${{ secrets.SSH_KEY }}
                script: |
                    echo "dupa"

            - name: Stop old container
              uses: appleboy/ssh-action@v0.1.8
              with:
                host: ${{ env.DEPLOYMENT_SERVER }}
                username: ${{ env.DEPLOYMENT_USER }}
                key: ${{ secrets.SSH_KEY }}
                script: |
                    cd ~/app
                    docker-compose down

            - name: Pull latest images
              uses: appleboy/ssh-action@v0.1.8
              with:
                host: ${{ env.DEPLOYMENT_SERVER }}
                username: ${{ env.DEPLOYMENT_USER }}
                key: ${{ secrets.SSH_KEY }}
                script: |
                    cd ~/app
                    docker-compose pull

            - name: Start application
              uses: appleboy/ssh-action@v0.1.8
              with:
                host: ${{ env.DEPLOYMENT_SERVER }}
                username: ${{ env.DEPLOYMENT_USER }}
                key: ${{ secrets.SSH_KEY }}
                script: |
                    cd ~/app
                    docker-compose up -d

